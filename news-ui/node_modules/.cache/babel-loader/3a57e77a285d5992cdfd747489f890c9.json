{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n\nvar QueueAction = function (_super) {\n  __extends(QueueAction, _super);\n\n  function QueueAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay != null && delay > 0 || delay == null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n\n    scheduler.flush(this);\n    return 0;\n  };\n\n  return QueueAction;\n}(AsyncAction);\n\nexport { QueueAction };","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAA4B,eAA5B;;AAMA;EAAoCC;;EAClC,qBAAsBC,SAAtB,EAA2DC,IAA3D,EAA8G;IAA9G,YACEC,kBAAMF,SAAN,EAAiBC,IAAjB,KAAsB,IADxB;;IAAsBE;IAAqCA;;EAE1D;;EAEMC,iCAAP,UAAgBC,KAAhB,EAA2BC,KAA3B,EAA4C;IAAjB;MAAAA;IAAiB;;IAC1C,IAAIA,KAAK,GAAG,CAAZ,EAAe;MACb,OAAOJ,iBAAMK,QAAN,CAAcC,IAAd,CAAc,IAAd,EAAeH,KAAf,EAAsBC,KAAtB,CAAP;IACD;;IACD,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKL,SAAL,CAAeS,KAAf,CAAqB,IAArB;IACA,OAAO,IAAP;EACD,CARM;;EAUAL,gCAAP,UAAeC,KAAf,EAAyBC,KAAzB,EAAsC;IACpC,OAAOA,KAAK,GAAG,CAAR,IAAa,KAAKI,MAAlB,GAA2BR,iBAAMS,OAAN,CAAaH,IAAb,CAAa,IAAb,EAAcH,KAAd,EAAqBC,KAArB,CAA3B,GAAyD,KAAKM,QAAL,CAAcP,KAAd,EAAqBC,KAArB,CAAhE;EACD,CAFM;;EAIGF,uCAAV,UAAyBJ,SAAzB,EAAoDa,EAApD,EAAsEP,KAAtE,EAAuF;IAAjB;MAAAA;IAAiB;;IAKrF,IAAKA,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAG,CAA1B,IAAiCA,KAAK,IAAI,IAAT,IAAiB,KAAKA,KAAL,GAAa,CAAnE,EAAuE;MACrE,OAAOJ,iBAAMY,cAAN,CAAoBN,IAApB,CAAoB,IAApB,EAAqBR,SAArB,EAAgCa,EAAhC,EAAoCP,KAApC,CAAP;IACD;;IAGDN,SAAS,CAACS,KAAV,CAAgB,IAAhB;IAMA,OAAO,CAAP;EACD,CAjBS;;EAkBZ;AAAC,CArCD,CAAoCX,WAApC","names":["AsyncAction","__extends","scheduler","work","_super","_this","QueueAction","state","delay","schedule","call","flush","closed","execute","_execute","id","requestAsyncId"],"sources":["D:\\News-App-capstone\\news-ui\\node_modules\\rxjs\\src\\internal\\scheduler\\QueueAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}